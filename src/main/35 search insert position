class Solution(object):
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """

        # edge cases: nums is empty or target not given

        if (not nums):
            return 1

        pointer_left = 0
        pointer_right = len(nums) -1 # prevent out of bounds
        position = 0

        while(pointer_left <= pointer_right):

            middle_threshhold = (pointer_left + pointer_right) // 2
        
            if target <= nums[middle_threshhold]:
                pointer_right = middle_threshhold-1
            elif target > nums[middle_threshhold]:
                pointer_left = middle_threshhold+1
            
        return pointer_left
