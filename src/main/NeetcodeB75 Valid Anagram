# Naive approach
# Timecomplexity: O(n log n) + O(n log n) + O(n) = O(n log n)
# Spacecomplexity: O(n) + O(n) = O(n)

class Solution:
    def isAnagram(self, s: str, t: str) -> bool:

        s_sorted = sorted(s)
        t_sorted = sorted(t)

        if len(t) != len(s):
            return False
        
        for index,char in enumerate(s_sorted):
            if s_sorted[index] != t_sorted[index]:
                return False
        
        return True
